{
  "name": "codepage",
  "version": "0.5.3",
  "author": {
    "name": "SheetJS"
  },
  "description": "pure-JS library to handle codepages",
  "keywords": [
    "codepage",
    "iconv",
    "convert",
    "strings"
  ],
  "main": "cputils.js",
  "dependencies": {
    "voc": ""
  },
  "devDependencies": {
    "mocha": ""
  },
  "scripts": {
    "build": "make js",
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/SheetJS/js-codepage.git"
  },
  "bugs": {
    "url": "https://github.com/SheetJS/js-codepage/issues"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=0.8"
  },
  "readme": "# Codepages for JS\n\n[Codepages](https://en.wikipedia.org/wiki/Codepage) are character encodings.  In\nmany contexts, single-byte character sets are used in lieu of standard multibyte\nUnicode encodings.  They use 256 characters with a simple mapping.\n\n[unicode.org](http://www.unicode.org/Public/MAPPINGS/) hosts lists of mappings.\nThe build script automatically downloads and parses the mappings in order to\ngenerate the full script.  The `pages.csv` description in `codepage.md` controls\nwhich codepages are used.\n\n## Setup\n\nIn the browser:\n\n    <script src=\"cptable.js\"></script>\n    <script src=\"cputils.js\"></script>\n\nThe complete set of codepages is large because of some Double Byte Character Set\nencodings.  A much smaller file that just includes SBCS codepages is provided in\nthis repo (`sbcs.js`).\n\nIf you know which codepages you need, you can include individual scripts for\neach codepage.  The individual files are provided in the `bits/` directory.\nFor example, to include only the Mac codepages:\n\n    <script src=\"bits/10000.js\"></script>\n    <script src=\"bits/10006.js\"></script>\n    <script src=\"bits/10007.js\"></script>\n    <script src=\"bits/10029.js\"></script>\n    <script src=\"bits/10079.js\"></script>\n    <script src=\"bits/10081.js\"></script>\n\nAll of the browser scripts define and append to the `cptable` object.  To rename\nthe object, edit the `JSVAR` shell variable in `make.sh` and run the script.\n\nThe utilities functions are contained in `cputils.js`, which assumes that the\nappropriate codepage scripts were loaded.\n\nIn node:\n\n    var cptable = require('codepage');\n\n## Usage\n\nThe codepages are indexed by number.  To get the unicode character for a given \ncodepoint, use the `dec` property:\n\n    var unicode_cp10000_255 = cptable[10000].dec[255]; // ˇ\n\nTo get the codepoint for a given character, use the `enc` property:\n\n    var cp10000_711 = cptable[10000].enc[String.fromCharCode(711)]; // 255\n\nThere are a few utilities that deal with strings and buffers:\n\n    var 汇总 = cptable.utils.decode(936, [0xbb,0xe3,0xd7,0xdc]);\n    var buf =  cptable.utils.encode(936,  汇总);\n\n## Building the script\n\nThis script uses [voc](npm.im/voc).  The script to build the codepage tables and\nthe JS source is `codepage.md`, so building is as simple as `voc codepage.md`.\n\n## Supported Codepages\n\nThe standard Windows codepages are supported:\n\n- 1250  Windows Central Europe \n- 1251  Windows Cyrillic \n- 1252  Windows Latin I\n- 1253  Windows Green\n- 1254  Windows Turkish\n- 1255  Windows Hebrew\n- 1256  Windows Arabic\n- 1257  Windows Baltic\n- 1258  Windows Vietnam\n- 874   Windows Thai\n\nThe full collection of `ISO-8859` codepages are also supported.  The East-Asian \nDouble Byte Character Sets are also supported:\n\n- 932   Japanese Shift-JIS\n- 936   Simplified Chinese GBK\n- 949   Korean\n- 950   Traditional Chinese Big5\n\nThe complete list of supported codepages can be found in the file `pages.csv`.\n\n## Missing Codepages\n\nThe following codepages are not implemented. Normative references may not be\navailable in all cases.  Furthermore, other software packages are known to hack\ncertain codepages (for example, Mozilla treats ASMO-708 as an alias of Arabic \nISO-8869-6 when in fact there are many differences), so all implementations\n*should* be cleanroom when possible.\n\n- 709   Arabic (ASMO-449+, BCON V4)\n- 710   Arabic - Transparent Arabic\n- 870   IBM EBCDIC Multilingual/ROECE (Latin 2); IBM EBCDIC Multilingual Latin 2\n- 1047  IBM EBCDIC Latin 1/Open System\n- 1140  IBM EBCDIC US-Canada (037 + Euro symbol); IBM EBCDIC (US-Canada-Euro)\n- 1141  IBM EBCDIC Germany (20273 + Euro symbol); IBM EBCDIC (Germany-Euro)\n- 1142  IBM EBCDIC Denmark-Norway (20277 + Euro symbol); IBM EBCDIC (Denmark-Norway-Euro)\n- 1143  IBM EBCDIC Finland-Sweden (20278 + Euro symbol); IBM EBCDIC (Finland-Sweden-Euro)\n- 1144  IBM EBCDIC Italy (20280 + Euro symbol); IBM EBCDIC (Italy-Euro)\n- 1145  IBM EBCDIC Latin America-Spain (20284 + Euro symbol); IBM EBCDIC (Spain-Euro)\n- 1146  IBM EBCDIC United Kingdom (20285 + Euro symbol); IBM EBCDIC (UK-Euro)\n- 1147  IBM EBCDIC France (20297 + Euro symbol); IBM EBCDIC (France-Euro)\n- 1148  IBM EBCDIC International (500 + Euro symbol); IBM EBCDIC (International-Euro)\n- 1149  IBM EBCDIC Icelandic (20871 + Euro symbol); IBM EBCDIC (Icelandic-Euro)\n- 1200  Unicode UTF-16, little endian byte order (BMP of ISO 10646); available only to managed applications\n- 1201  Unicode UTF-16, big endian byte order; available only to managed applications\n- 1361  Korean (Johab)\n- 10001 Japanese (Mac)\n- 10002 MAC Traditional Chinese (Big5); Chinese Traditional (Mac)\n- 10003 Korean (Mac)\n- 10004 Arabic (Mac)\n- 10005 Hebrew (Mac)\n- 10008 MAC Simplified Chinese (GB 2312); Chinese Simplified (Mac)\n- 10010 Romanian (Mac)\n- 10017 Ukrainian (Mac)\n- 10021 Thai (Mac)\n- 10082 Croatian (Mac)\n- 12000 Unicode UTF-32, little endian byte order; available only to managed applications\n- 12001 Unicode UTF-32, big endian byte order; available only to managed applications\n- 20000 CNS Taiwan; Chinese Traditional (CNS)\n- 20001 TCA Taiwan\n- 20002 Eten Taiwan; Chinese Traditional (Eten)\n- 20003 IBM5550 Taiwan\n- 20004 TeleText Taiwan\n- 20005 Wang Taiwan\n- 20105 IA5 (IRV International Alphabet No. 5, 7-bit); Western European (IA5)\n- 20106 IA5 German (7-bit)\n- 20107 IA5 Swedish (7-bit)\n- 20108 IA5 Norwegian (7-bit)\n- 20127 US-ASCII (7-bit)\n- 20261 T.61\n- 20269 ISO 6937 Non-Spacing Accent\n- 20273 IBM EBCDIC Germany\n- 20277 IBM EBCDIC Denmark-Norway\n- 20278 IBM EBCDIC Finland-Sweden\n- 20280 IBM EBCDIC Italy\n- 20284 IBM EBCDIC Latin America-Spain\n- 20285 IBM EBCDIC United Kingdom\n- 20290 IBM EBCDIC Japanese Katakana Extended\n- 20297 IBM EBCDIC France\n- 20420 IBM EBCDIC Arabic\n- 20423 IBM EBCDIC Greek\n- 20424 IBM EBCDIC Hebrew\n- 20833 IBM EBCDIC Korean Extended\n- 20838 IBM EBCDIC Thai\n- 20866 Russian (KOI8-R); Cyrillic (KOI8-R)\n- 20871 IBM EBCDIC Icelandic\n- 20880 IBM EBCDIC Cyrillic Russian\n- 20905 IBM EBCDIC Turkish\n- 20924 IBM EBCDIC Latin 1/Open System (1047 + Euro symbol)\n- 20932 Japanese (JIS 0208-1990 and 0212-1990)\n- 20936 Simplified Chinese (GB2312); Chinese Simplified (GB2312-80)\n- 20949 Korean Wansung\n- 21025 IBM EBCDIC Cyrillic Serbian-Bulgarian\n- 21027 (deprecated) <-- is this necessary?\n- 21866 Ukrainian (KOI8-U); Cyrillic (KOI8-U)\n- 29001 Europa 3\n- 38598 ISO 8859-8 Hebrew; Hebrew (ISO-Logical)\n- 50220 ISO 2022 Japanese with no halfwidth Katakana; Japanese (JIS)\n- 50221 ISO 2022 Japanese with halfwidth Katakana; Japanese (JIS-Allow 1 byte Kana)\n- 50222 ISO 2022 Japanese JIS X 0201-1989; Japanese (JIS-Allow 1 byte Kana - SO/SI)\n- 50225 ISO 2022 Korean\n- 50227 ISO 2022 Simplified Chinese; Chinese Simplified (ISO 2022)\n- 50229 ISO 2022 Traditional Chinese\n- 50930 EBCDIC Japanese (Katakana) Extended\n- 50931 EBCDIC US-Canada and Japanese\n- 50933 EBCDIC Korean Extended and Korean\n- 50935 EBCDIC Simplified Chinese Extended and Simplified Chinese\n- 50936 EBCDIC Simplified Chinese\n- 50937 EBCDIC US-Canada and Traditional Chinese\n- 50939 EBCDIC Japanese (Latin) Extended and Japanese\n- 51932 EUC Japanese\n- 51936 EUC Simplified Chinese; Chinese Simplified (EUC)\n- 51949 EUC Korean\n- 51950 EUC Traditional Chinese\n- 52936 HZ-GB2312 Simplified Chinese; Chinese Simplified (HZ)\n- 54936 Windows XP and later: GB18030 Simplified Chinese (4 byte); Chinese Simplified (GB18030)\n- 57002 ISCII Devanagari\n- 57003 ISCII Bengali\n- 57004 ISCII Tamil\n- 57005 ISCII Telugu\n- 57006 ISCII Assamese\n- 57007 ISCII Oriya\n- 57008 ISCII Kannada\n- 57009 ISCII Malayalam\n- 57010 ISCII Gujarati\n- 57011 ISCII Punjabi\n- 65000 Unicode (UTF-7)\n\n## Sources\n\n- [Unicode Consortium Public Mappings](http://www.unicode.org/Public/MAPPINGS/)\n- [Code Page Enumeration](http://msdn.microsoft.com/en-us/library/cc195051.aspx)\n- [Code Page Identifiers](http://msdn.microsoft.com/en-us/library/windows/desktop/dd317756(v=vs.85).aspx)\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/SheetJS/js-codepage",
  "_id": "codepage@0.5.3",
  "_from": "codepage@"
}
