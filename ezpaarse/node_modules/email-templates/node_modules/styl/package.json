{
  "name": "styl",
  "description": "CSS pre-processor built on Rework",
  "version": "0.2.7",
  "keywords": [
    "css",
    "stylus",
    "preprocessor",
    "style"
  ],
  "dependencies": {
    "css-whitespace": "1.1.0",
    "debug": "*",
    "rework": "0.18.3",
    "commander": "1.1.1",
    "stdin": "0.0.1",
    "rework-mixins": "1.1.1"
  },
  "devDependencies": {
    "should": "~1.2.2",
    "mocha": "~1.9.0"
  },
  "bin": {
    "styl": "bin/styl"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/visionmedia/styl.git"
  },
  "readme": "# Styl\n\n  Work-in-progress CSS preprocessor.\n  Spiritual successor of [Stylus](https://github.com/LearnBoost/stylus).\n  Built on top of [Rework](https://github.com/visionmedia/rework).\n\n  Styl is basically an opinionated configuration of Rework. It does not aim for feature parity with Stylus.\n\n  If your application benefits from a runtime (conditionals, loops etc.), then Stylus is for you.\n  If your application benefits from incredibly fast builds, simplicity, and the most transparent CSS\n  preprocessor around, then Styl is for you.\n\n  Building Styl on top of Rework drastically reduces complexity. Thatâ€™s because Rework is comprised of multiple\n  smaller pieces, plugins, and has no complex runtime. If you wish to include custom plugins, or configure Styl\n  beyond its defaults, the interface is the same as Rework.\n\n## Installation\n\n```\n$ npm install -g styl\n```\n\nor with component:\n\n```\n$ component install component/styl\n```\n\nor with a script tag using ./styl.js\n\n## Features\n\n  All Rework features and plugins are available out-of-the-box, including:\n\n  - automatic vendor-prefixed properties\n  - automatic vendor-prefixed values\n  - automatic vendor-prefixed keyframes\n  - additional easing functions\n  - transparent support for retina hi-res images\n  - rgba color helpers (`rgba(#fc0, .5)`)\n  - property reference support (`height: @width`)\n  - several [mixins](https://github.com/visionmedia/rework-mixins)\n  - optional whitespace significant syntax\n  - placeholder selectors\n  - selector extensions\n  - parent selector reference\n  - nested selectors\n  - command-line executable\n\n## styl(1)\n\n```\nUsage: styl [options]\n\nOptions:\n\n  -h, --help            output usage information\n  -V, --version         output the version number\n  -v, --vendors <list>  vendor prefixes to apply [o,ms,moz,webkit]\n  -w, --whitespace      use significant whitespace pre-processor\n  -c, --compress        use output compression\n```\n\n## Examples\n\n### CSS syntax\n\n  Regular CSS, with no vendor prefixing:\n\n```css\n#logo {\n  width: 50px;\n  height: @width;\n  absolute: top 100px left 50%;\n  background: linear-gradient(top, black, white);\n}\n```\n\n  Compiled with the following command:\n\n```\n$ styl < simple.css > out.css\n```\n\n  Yields:\n\n```css\n#logo {\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  top: 100px;\n  left: 50%;\n  background: -o-linear-gradient(top, black, white);\n  background: -ms-linear-gradient(top, black, white);\n  background: -moz-linear-gradient(top, black, white);\n  background: -webkit-linear-gradient(top, black, white);\n  background: linear-gradient(top, black, white)\n}\n```\n\n### Whitespace significant syntax\n\n  The SASS-style (significant whitespace) syntax supports nesting and parent selector references.\n  Currently, the CSS style does not; however this is likely to change in the future.\n\n```css\n\nul\n  margin: 0\n  li\n    list-style: none\n    a\n      display: block\n      text-decoration: none\n      padding: 5px 10px\n      &:hover\n        text-decoration: underline\n```\n\n  Compiled with the following command:\n\n```\n$ styl -w < simple.styl > out.css\n```\n\n  Yields:\n\n```css\nul {\n  margin: 0\n}\n\nul li a:hover {\n  text-decoration: underline\n}\n\nul li a {\n  display: block;\n  text-decoration: none;\n  padding: 5px 10px\n}\n\nul li {\n  list-style: none\n}\n```\n\n## API\n\n### Styl(string, options)\n\n  Initialize a new `Styl` with the given `string` of regular CSS or\n  whitespace-significant style CSS with the following options:\n\n  - `whitespace` enable css whitespace [false]\n  - `compress` enable output compression [false]\n\n```js\nvar styl = require('styl');\nvar css = styl('body\\n  color: blue', { whitespace: true }).toString();\n```\n\n### Styl#toString()\n\n  Convert to CSS.\n\n## Projects\n\n  Projects built with Styl:\n\n  - [kube styl](https://github.com/james2doyle/kube-styl) - styl implementation of the \"kube\" css framework\n\n## License\n\n  MIT\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/visionmedia/styl/issues"
  },
  "homepage": "https://github.com/visionmedia/styl",
  "_id": "styl@0.2.7",
  "_from": "styl@^0.2.7"
}
