{"version":3,"sources":["console.js"],"names":[],"mappings":"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","file":"console.js","sourcesContent":["// Implements console.log, console.error, console.time, et al and emits a\n// console event for each output.\n\n\nconst { format, inspect } = require('util');\n\n\nmodule.exports = class Console {\n\n  constructor(browser) {\n    this.browser = browser;\n  }\n\n  assert(truth, ...args) {\n    if (truth)\n      return;\n    const formatted = format('', ...args);\n    const message   = `Assertion failed: ${formatted || 'false'}`;\n    this.browser.emit('console', 'error', message);\n    throw new Error(message);\n  }\n\n  count(name) {\n    if (!this.counters)\n      this.counters = {};\n    if (!this.counters[name])\n    this.counters[name] = 0;\n    this.counters[name]++;\n    const message = `${name}: ${this.counters[name]}`;\n    this.browser.emit('console', 'log', message);\n  }\n\n  debug(...args) {\n    this.browser.emit('console', 'debug', format(...args));\n  }\n\n  error(...args) {\n    this.browser.emit('console', 'error', format(...args));\n  }\n\n  group() {\n  }\n  groupCollapsed() {\n  }\n  groupEnd() {\n  }\n\n  dir(object) {\n    this.browser.emit('console', 'log', inspect(object));\n  }\n\n  info(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  log(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n  time(name) {\n    if (!this.timers)\n      this.timers = {};\n    this.timers[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (this.timers) {\n      const start = this.timers[name];\n      delete this.timers[name];\n      const message = `${name}: ${Date.now() - start}ms`;\n      this.browser.emit('console', 'log', message);\n    }\n  }\n\n  trace() {\n    const error = new Error();\n    const stack = error.stack.split('\\n');\n    stack[0] = 'console.trace()';\n    const message = stack.join('\\n');\n    this.browser.emit('console', 'trace', message);\n  }\n\n  warn(...args) {\n    this.browser.emit('console', 'log', format(...args));\n  }\n\n};\n\n"],"sourceRoot":"/source/"}