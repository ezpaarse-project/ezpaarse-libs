{
  "name": "lines-skipper",
  "version": "0.0.5",
  "description": "a small module to skip lines in a stream",
  "main": "index.js",
  "scripts": {
    "test": "mocha test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nojhamster/lines-skipper.git"
  },
  "keywords": [
    "lines",
    "skip",
    "stream"
  ],
  "author": {
    "name": "nojhamster"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/nojhamster/lines-skipper/issues"
  },
  "homepage": "https://github.com/nojhamster/lines-skipper",
  "devDependencies": {
    "mocha": "*"
  },
  "readme": "lines-skipper\n=============\n\nA small node module to skip lines.\nIt's basically a transform stream that counts lines and doesn't push those whose number is in a given list.\n\n## Installation\n\n```\nnpm install lines-skipper\n```\n\n## Usage\n\n### With an array of integers\n```javascript\n  var skip = require('lines-skipper');\n\n  readStream\n  .pipe(skip([2,4,6])) // skip lines 2, 4 and 6\n  .pipe(writeStream);\n```\n\n### With a filtering function\n```javascript\n  var skip = require('lines-skipper');\n\n  readStream\n  .pipe(skip(function (n) { return n % 2 })) // skip lines whose number is odd\n  .pipe(writeStream);\n```\n\n## Example\n\n```javascript\n  var skip = require('lines-skipper');\n  var skipper = skip([2,4,6]);\n\n  var result = '';\n  \n  skipper.on('readable', function () {\n    result += skipper.read();\n  });\n  \n  skipper.on('error', function (err) {\n    throw err;\n  });\n  \n  skipper.on('finish', function () {\n    console.log(result) // output '1\\n3\\n5\\n7'\n  });\n\n  skipper.write('1\\n2\\n3\\n4\\n5\\n6\\n7');\n  skipper.end();\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "1e8e5519fde87805a9eaa6e46ea774fea4f5d211",
  "_id": "lines-skipper@0.0.5",
  "_shasum": "6feb8399e7ffacfba3b7200b629cfc8d97d4ed96",
  "_from": "lines-skipper@0.0.5"
}
